# Enhanced Caddyfile for CalendarBot Lite with comprehensive header forwarding
# Copy this to /etc/caddy/Caddyfile

ashwoodgrove.net {
    # Enable verbose logging for debugging
    log {
        output file /var/log/caddy/access.log
        level DEBUG
    }
    
    # Reverse proxy with explicit header forwarding
    reverse_proxy localhost:8080 {
        # Forward all standard headers
        header_up Host {host}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}
        
        # CRITICAL: Forward Authorization header explicitly
        header_up Authorization {header.Authorization}
        
        # Forward all other headers (catch-all approach)
        header_up User-Agent {header.User-Agent}
        header_up Accept {header.Accept}
        header_up Accept-Encoding {header.Accept-Encoding}
        header_up Connection {header.Connection}
        header_up Content-Type {header.Content-Type}
        header_up Content-Length {header.Content-Length}
        
        # Alternative: Forward ALL headers using wildcard
        # This should catch Authorization even if explicit forwarding fails
        @hasauth header Authorization *
        header_up @hasauth Authorization {header.Authorization}
        
        # Debugging: Log what we're forwarding
        header_up X-Debug-Auth-Present {header.Authorization}
    }
    
    # Additional debugging endpoint to test header forwarding
    handle /debug-headers {
        respond "Headers received by Caddy: {header}" 200
    }
}

# Alternative configuration if the above doesn't work
# ashwoodgrove.net {
#     reverse_proxy localhost:8080 {
#         # More aggressive header forwarding
#         header_up * {header.*}
#     }
# }
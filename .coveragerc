# Coverage configuration optimized for sequential test execution
[run]
source = calendarbot
branch = True
# CRITICAL: Parallel processing disabled for sequential execution
parallel = False
concurrency = thread
timid = False

# Comprehensive omit patterns for clean coverage
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */node_modules/*
    debug_*.py
    test_*.py
    setup.py
    */migrations/*
    */conftest.py
    */.tox/*
    */coverage/*
    */htmlcov/*
    *_temp.py
    *_backup.py
    validate_*.py
    simple_*.py
    memory_leak_*.py
    parallel_execution_test.py

# Data collection optimization
data_file = .coverage
disable_warnings =
    no-data-collected
    couldnt-parse

[report]
# Quality thresholds
fail_under = 80
precision = 2
show_missing = True
skip_covered = False
skip_empty = True
sort = Cover

# Enhanced exclusion patterns
exclude_lines =
    pragma: no cover
    pragma: nocover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    raise ValueError.*not implemented
    if __name__ == .__main__.:
    if TYPE_checking:
    if typing.TYPE_CHECKING:
    @(abc\.)?abstractmethod
    class .*\bProtocol\):
    def test_.*
    async def test_.*
    # Debug code
    if self\.debug:
    if settings\.DEBUG:
    # Test-only code
    if 0:
    if False:
    # Platform-specific code
    if sys\.platform

[html]
directory = htmlcov
title = CalendarBot Test Coverage Report
show_contexts = True
skip_covered = False
skip_empty = True

[xml]
output = coverage.xml

[json]
output = coverage.json
show_contexts = True

# Path mapping for accurate reporting
[paths]
source =
    calendarbot/
    */calendarbot/
